#!/usr/bin/env python
# coding: utf-8

"""
Kullanım
========

``git-pullrequest`` GitHub üzerine açılmış bir issueyu pull request'e
çevirmeye yarayan bir Python betiğidir.


Kurulum
-------

.. warning::

   ``git-pullrequest`` betiğini çalıştırmak için ``$PATH``'te yer
   alan herhangi bir klasörün içine koymak yeterlidir.

Kullanmaya başlamak için GitHub kullanıcı bilgilerinizi girmelisiniz::

    $ git config pullrequest.user.name <USERNAME>
    $ git config pullrequest.user.password <PASSWORD>


Ayarlar
-------

* ``pullrequest.repo.base``: Varsayılan değer ``master``.


Örnek Kullanım
--------------

::

    $ git pullrequest -i 2 -r user:test -H me:fix-b -b master

"""

from __future__ import print_function

import json
import subprocess

import requests

# Settings
GH_API_URL = 'https://api.github.com/repos/{user:s}/{repo:s}/pulls'
GH_REPO_BASE = 'master'

# Git config keys
CFG_USER_NAME = 'pullrequest.user.name'
CFG_USER_PASSWORD = 'pullrequest.user.password'
CFG_REPO_BASE = 'pullrequest.repo.base'


def _git_config(key, value=None, default=None):
    if value is None:
        value = ''
    cmd = 'git config {key:s} {value:s}'.format(key=key, value=value)
    run = subprocess.check_output(cmd.split(), universal_newlines=True)
    output = run.rstrip()
    if not output:
        if default is not None:
            return default
        raise ValueError('invalid config')
    return output


def _create_pull_request(**config):
    user, repo = config['repo'].split(':')
    url = GH_API_URL.format(user=user, repo=repo)
    auth = (_git_config(CFG_USER_NAME), _git_config(CFG_USER_PASSWORD))
    # TODO: Yeni requests'e göre çalışır hale getir
    res = requests.post(url, auth=auth, data=json.dumps(config))
    print(res.headers)
    print(res.text)


def main():
    import argparse

    parser = argparse.ArgumentParser(prog='git-pullrequest')
    parser.add_argument('-i', '--issue', type=int, required=True)
    parser.add_argument('-H', '--head', type=str, required=True)
    parser.add_argument('-r', '--repo', type=str, required=True)
    parser.add_argument('-b', '--base', type=str,
                        default=_git_config(CFG_REPO_BASE, default=GH_REPO_BASE))
    args = parser.parse_args()

    _create_pull_request(**vars(args))

if __name__ == '__main__':
    main()
