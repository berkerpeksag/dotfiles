#!/usr/bin/env python
# coding: utf-8

"""
Kullanım
========

``git-pullrequest`` GitHub üzerine açılmış bir issueyu pull request'e
çevirmeye yarayan bir Python betiğidir.


Kurulum
-------

.. warning:: ``git-pullrequest`` betiğini çalıştırmak için ``PATH``'te yer
             alan herhangi bir klasörün içine koymak yeterlidir.

Kullanmaya başlamak için GitHub kullanıcı bilgilerinizi girmelisiniz::

    $ git config pullrequest.user.name <USERNAME>
    $ git config pullrequest.user.password <PASSWORD>


Ayarlar
-------

* ``pullrequest.repo.base``: Varsayılan değer ``master``.


Örnek Kullanım
--------------

::

    $ git pullrequest -i 2 -r user:test -H me:fix-b -b master

"""

import argparse
import json
import subprocess

import requests

GH_API_URL = 'https://api.github.com/repos/{user:s}/{repo:s}/pulls'
CFG_USER_NAME = 'pullrequest.user.name'
CFG_USER_PASSWORD = 'pullrequest.user.password'


class GitHubConfigError(KeyError):
    pass


def _git_config(key, value=None, default=None):
    if value is None:
        value = ''
    cmd_tpl = 'git config {key:s} {value:s}'
    cmd = cmd_tpl.format(key=key, value=value)
    run = subprocess.check_output(cmd.split(), universal_newlines=True)
    output = run.rstrip()
    if not output:
        if default is not None:
            return default
        raise GitHubConfigError
    return output


def _create_pull_request(**config):
    user, repo = config['repo'].split(':')
    url = GH_API_URL.format(user=user, repo=repo)
    auth = (_git_config(CFG_USER_NAME), _git_config(CFG_USER_PASSWORD))
    r = requests.post(url, auth=auth, data=json.dumps(config))
    print r.headers
    print r.text


def main():
    parser = argparse.ArgumentParser(prog='git-pullrequest')
    parser.add_argument('-i', '--issue', type=int, required=True)
    parser.add_argument('-H', '--head', type=str, required=True)
    parser.add_argument('-r', '--repo', type=str, required=True)
    parser.add_argument('-b', '--base', type=str, default='master')
    args = parser.parse_args()

    _create_pull_request(**args.__dict__)

if __name__ == '__main__':
    main()
